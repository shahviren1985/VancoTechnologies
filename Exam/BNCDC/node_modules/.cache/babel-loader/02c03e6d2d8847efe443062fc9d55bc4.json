{"ast":null,"code":"import _objectSpread from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\VancoTechnologies\\\\Code\\\\Exam\\\\BNCDC\\\\Common\\\\src\\\\dashboard\\\\Dashboard.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { reset as _reset, setPapers as _setPapers, setApp as _setApp } from '../store/actions/app';\nimport { removeUserFromLocalStorage } from '../util';\nimport './style.css';\nimport { getCourse as _getCourse } from '../store/actions/course';\nimport { getUserFromLocalStorage, getUniqueId, getFileName, getTime } from '../util';\nimport Info from './Info';\nimport Nav from './Nav';\nimport { setMarksheet as _setMarksheet, resetMarksheet as _resetMarksheet, setRows as _setRows } from '../store/actions/marksheet';\nimport Details from './Details';\nimport cloneDeep from 'lodash/cloneDeep';\nimport axios from 'axios';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/dist/sweetalert2.css';\nimport classNames from 'classnames';\nimport Marksheet from '../marksheet/Marksheet';\nimport Report from '../report/Report';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this.logout = _this.logout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateChange = _this.handleDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleYearChange = _this.handleYearChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addRow = _this.addRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeRow = _this.removeRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onInfoChange = _this.onInfoChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onPaperInfoChange = _this.onPaperInfoChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveStudentInfo = _this.saveStudentInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveMarks = _this.saveMarks.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.printMarksheet = _this.printMarksheet.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.printLedgerReport = _this.printLedgerReport.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      errors: {},\n      saveStudentInfoFlag: false,\n      saveMarksFlag: false,\n      displayErrors: {\n        grace: '',\n        required: '',\n        marks: '',\n        rollNumber: '',\n        examName: '',\n        year: '',\n        date: ''\n      },\n      view: 'default',\n      apiUrl: ''\n    };\n    _this.skipWords = ['ABS', 'NP', 'CC', 'NA'];\n    _this.backToDashboard = _this.backToDashboard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = getUserFromLocalStorage();\n      var code = user.courseCode;\n      this.props.getCourse(code);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      removeUserFromLocalStorage();\n      this.props.reset();\n      this.props.resetMarksheet();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.props.setMarksheet(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(e) {\n      this.props.setMarksheet({\n        date: e\n      });\n    }\n  }, {\n    key: \"handleYearChange\",\n    value: function handleYearChange(e) {\n      var _this2 = this;\n\n      var user = this.props.user;\n      this.props.resetMarksheet();\n      var year = e.target.value;\n      var course = this.props.course[year] || {};\n      var papers = course && course.papers || [];\n      this.props.setMarksheet({\n        year: year\n      });\n      this.props.setApp({\n        papers: _toConsumableArray(papers),\n        maxGrace: course.maxGrace\n      });\n      var code = user.courseCode;\n      var fileName = getFileName(code, year);\n      var apiUrl = \"./api/\".concat(fileName);\n      this.setState({\n        apiUrl: apiUrl\n      });\n      axios.get(\"\".concat(apiUrl, \"?nocache=\").concat(getTime())).then(function (res) {\n        _this2.props.setMarksheet(res.data);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"addRow\",\n    value: function addRow() {\n      var marksheet = this.props.marksheet;\n      var papers = this.props.papers;\n      var row = {};\n\n      var _papers = cloneDeep(papers);\n\n      if (papers.length === 0) {\n        return;\n      }\n\n      row.id = getUniqueId();\n      row.rollNumber = '';\n      row.name = '';\n      row.papers = _papers;\n      this.props.setRows([].concat(_toConsumableArray(marksheet.rows), [row]));\n    }\n  }, {\n    key: \"removeRow\",\n    value: function removeRow(index) {\n      var _this3 = this;\n\n      Swal.fire({\n        // title: 'Are you sure?',\n        text: \"Are you sure you want to permanently delete this student record?\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes',\n        cancelButtonText: \"No\"\n      }).then(function (result) {\n        if (result.value) {\n          _this3.remove(index);\n        }\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(index) {\n      var rows = _toConsumableArray(this.props.marksheet.rows);\n\n      rows.splice(index, 1);\n      this.props.setMarksheet({\n        rows: rows\n      });\n    }\n  }, {\n    key: \"onInfoChange\",\n    value: function onInfoChange(index, e) {\n      var marksheet = this.props.marksheet;\n\n      var rows = _toConsumableArray(marksheet.rows);\n\n      var value = e.target.value;\n\n      if (e.target.name === 'name') {\n        value = \"\".concat(value).toUpperCase();\n      }\n\n      rows[index][e.target.name] = value;\n      this.props.setRows(rows);\n    }\n  }, {\n    key: \"onPaperInfoChange\",\n    value: function onPaperInfoChange(rowIndex, paperIndex, detailIndex, e) {\n      var marksheet = this.props.marksheet;\n\n      var rows = _toConsumableArray(marksheet.rows);\n\n      var papers = _toConsumableArray(rows[rowIndex].papers);\n\n      papers[paperIndex].paperDetails[detailIndex][e.target.name] = e.target.value;\n      rows[rowIndex].papers = papers;\n      this.props.setRows(rows);\n    }\n  }, {\n    key: \"saveStudentInfo\",\n    value: function saveStudentInfo() {\n      var _this4 = this;\n\n      this.resetError();\n      this.setState({\n        saveStudentInfoFlag: true\n      });\n      var _this$props = this.props,\n          marksheet = _this$props.marksheet,\n          user = _this$props.user;\n      var code = user.courseCode;\n      var fileName = getFileName(code, marksheet.year);\n      axios.post('./api/save.php', {\n        fileName: fileName,\n        data: marksheet\n      }).then(function (res) {\n        _this4.success();\n\n        _this4.setState({\n          saveStudentInfoFlag: false\n        });\n      }).catch(function (error) {\n        _this4.error();\n\n        _this4.setState({\n          saveStudentInfoFlag: false\n        });\n      });\n    }\n  }, {\n    key: \"saveMarks\",\n    value: function saveMarks() {\n      var _this5 = this;\n\n      this.resetError();\n      var _this$props2 = this.props,\n          marksheet = _this$props2.marksheet,\n          user = _this$props2.user;\n\n      if (this.checkErrors(marksheet)) {\n        this.setState({\n          saveMarksFlag: true\n        });\n        var code = user.courseCode;\n        var fileName = getFileName(code, marksheet.year);\n        axios.post('./api/save.php', {\n          fileName: fileName,\n          data: marksheet\n        }).then(function (res) {\n          _this5.success();\n\n          _this5.setState({\n            saveMarksFlag: false\n          });\n        }).catch(function (error) {\n          _this5.error();\n\n          _this5.setState({\n            saveMarksFlag: false\n          });\n        });\n      } else {\n        setTimeout(function () {\n          _this5.error('Validation failed', _this5.getErrorDisplayMessage());\n        });\n      }\n    }\n  }, {\n    key: \"getErrorDisplayMessage\",\n    value: function getErrorDisplayMessage() {\n      var displayErrorMessage = Object.values(this.state.displayErrors);\n      return displayErrorMessage.join(\"<br>\");\n    }\n  }, {\n    key: \"checkErrors\",\n    value: function checkErrors(marksheet) {\n      var _this6 = this;\n\n      var errors = {};\n      var displayErrors = {};\n\n      if (!marksheet.examName) {\n        errors.examName = 'Required';\n        this.setState({\n          displayErrors: _objectSpread({}, this.state.displayErrors, {\n            examName: 'Please fill in Exam name'\n          })\n        });\n        displayErrors.examName = 'Please fill in Exam name';\n      }\n\n      if (!marksheet.examYear) {\n        errors.examYear = 'Required';\n        displayErrors.year = 'Please fill in year';\n      }\n\n      if (!marksheet.date) {\n        errors.date = 'Required';\n        displayErrors.date = 'Please fill in date of result';\n      }\n\n      marksheet.rows.forEach(function (row, index) {\n        if (!row.rollNumber) {\n          errors[\"rollNumber\".concat(index)] = 'Required';\n          displayErrors.required = 'Fields are required';\n        } else if (isNaN(row.rollNumber) || row.rollNumber <= 0) {\n          errors[\"rollNumber\".concat(index)] = 'Invalid roll number';\n          displayErrors.rollNumber = 'Please enter valid Roll number';\n        }\n\n        if (!row.name) {\n          errors[\"name\".concat(index)] = 'Required';\n          displayErrors.required = 'Fields are required';\n        }\n\n        var graceMarksCounter = 0;\n        row.papers.forEach(function (paper, i) {\n          paper.paperDetails.forEach(function (detail, detailIndex) {\n            if (detail.isRequired && !detail.marksObtained) {\n              errors[\"\".concat(detail.title, \"_\").concat(index, \"_\").concat(i)] = 'Required';\n              displayErrors.required = 'Fields are required';\n            } else if (detail.marksObtained) {\n              if (detail.title == \"Language\" || detail.title == \"Grade\") {\n                return;\n              }\n\n              if (_this6.skipWords.indexOf(\"\".concat(detail.marksObtained).toUpperCase()) !== -1) {\n                return;\n              }\n\n              if (isNaN(detail.marksObtained)) {\n                errors[\"\".concat(detail.title, \"_\").concat(index, \"_\").concat(i)] = 'Invalid Value';\n                displayErrors.marks = 'Please correct the entered marks';\n              } else if (detail.isGrace) {\n                graceMarksCounter += +detail.marksObtained;\n\n                if (graceMarksCounter > _this6.props.maxGrace) {\n                  errors[\"\".concat(detail.title, \"_\").concat(index, \"_\").concat(i)] = 'Grace marks is larger';\n                  displayErrors.marks = 'Grace marks is exceeding limit';\n                }\n              } else if (+detail.marksObtained < 0 || +detail.marksObtained > +detail.maximum) {\n                errors[\"\".concat(detail.title, \"_\").concat(index, \"_\").concat(i)] = 'Not in range';\n                displayErrors.marks = 'Please correct the entered marks';\n              }\n            }\n          });\n        });\n      }); // console.log(errors);\n\n      if (Object.keys(errors).length) {\n        this.setState({\n          errors: errors,\n          displayErrors: displayErrors\n        });\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"resetError\",\n    value: function resetError() {\n      this.setState({\n        errors: {}\n      });\n    }\n  }, {\n    key: \"printMarksheet\",\n    value: function printMarksheet() {\n      this.setState({\n        view: 'marksheet'\n      });\n    }\n  }, {\n    key: \"printLedgerReport\",\n    value: function printLedgerReport() {\n      this.setState({\n        view: 'report'\n      });\n    }\n  }, {\n    key: \"success\",\n    value: function success() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Records have been saved successfully!';\n      Swal.fire({\n        type: 'success',\n        title: message,\n        showConfirmButton: false,\n        timer: 1500\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Something went wrong';\n      var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      Swal.fire({\n        type: 'error',\n        title: message,\n        html: text\n      });\n    }\n  }, {\n    key: \"backToDashboard\",\n    value: function backToDashboard() {\n      // this.setState({view: 'default'})\n      this.reload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          course = _this$props3.course,\n          user = _this$props3.user;\n      var years = course.years;\n      var _this$props4 = this.props,\n          marksheet = _this$props4.marksheet,\n          papers = _this$props4.papers;\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          saveStudentInfoFlag = _this$state.saveStudentInfoFlag,\n          saveMarksFlag = _this$state.saveMarksFlag,\n          view = _this$state.view,\n          apiUrl = _this$state.apiUrl;\n      var grades = course.grades || [];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames('full-height', {\n          'has-background-grey-lighter': view === 'default'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        logout: this.logout,\n        reload: this.reload,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), view === 'default' && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Info, {\n        course: course,\n        years: years,\n        marksheet: marksheet,\n        onChange: this.onChange,\n        handleDateChange: this.handleDateChange,\n        handleYearChange: this.handleYearChange,\n        errors: errors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), React.createElement(Details, {\n        marksheet: marksheet,\n        papers: papers,\n        addRow: this.addRow,\n        removeRow: this.removeRow,\n        onInfoChange: this.onInfoChange,\n        onPaperInfoChange: this.onPaperInfoChange,\n        saveStudentInfo: this.saveStudentInfo,\n        saveMarks: this.saveMarks,\n        errors: errors,\n        printMarksheet: this.printMarksheet,\n        printLedgerReport: this.printLedgerReport,\n        saveStudentInfoFlag: saveStudentInfoFlag,\n        saveMarksFlag: saveMarksFlag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      })), view === 'marksheet' && React.createElement(Marksheet, {\n        grades: grades,\n        backToDashboard: this.backToDashboard,\n        apiUrl: apiUrl,\n        marksheetTemplate: course.marksheetTemplate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), view === 'report' && React.createElement(Report, {\n        grades: grades,\n        backToDashboard: this.backToDashboard,\n        apiUrl: apiUrl,\n        reportTemplate: course.reportTemplate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    course: state.course,\n    marksheet: state.marksheet,\n    user: state.app.user,\n    papers: state.app.papers,\n    maxGrace: state.app.maxGrace\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    reset: function reset() {\n      return dispatch(_reset());\n    },\n    getCourse: function getCourse(code) {\n      return dispatch(_getCourse(code));\n    },\n    setMarksheet: function setMarksheet(data) {\n      return dispatch(_setMarksheet(data));\n    },\n    resetMarksheet: function resetMarksheet() {\n      return dispatch(_resetMarksheet());\n    },\n    setRows: function setRows(data) {\n      return dispatch(_setRows(data));\n    },\n    setPapers: function setPapers(papers) {\n      return dispatch(_setPapers(papers));\n    },\n    setApp: function setApp(payload) {\n      return dispatch(_setApp(payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["D:\\VancoTechnologies\\Code\\Exam\\BNCDC\\Common\\src\\dashboard\\Dashboard.js"],"names":["React","Fragment","connect","reset","setPapers","setApp","removeUserFromLocalStorage","getCourse","getUserFromLocalStorage","getUniqueId","getFileName","getTime","Info","Nav","setMarksheet","resetMarksheet","setRows","Details","cloneDeep","axios","Swal","classNames","Marksheet","Report","Dashboard","props","logout","bind","onChange","handleDateChange","handleYearChange","addRow","removeRow","onInfoChange","onPaperInfoChange","saveStudentInfo","saveMarks","printMarksheet","printLedgerReport","reload","state","errors","saveStudentInfoFlag","saveMarksFlag","displayErrors","grace","required","marks","rollNumber","examName","year","date","view","apiUrl","skipWords","backToDashboard","user","code","courseCode","window","location","e","target","name","value","course","papers","maxGrace","fileName","setState","get","then","res","data","catch","error","console","log","marksheet","row","_papers","length","id","rows","index","fire","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","remove","splice","toUpperCase","rowIndex","paperIndex","detailIndex","paperDetails","resetError","post","success","checkErrors","setTimeout","getErrorDisplayMessage","displayErrorMessage","Object","values","join","examYear","forEach","isNaN","graceMarksCounter","paper","i","detail","isRequired","marksObtained","title","indexOf","isGrace","maximum","keys","message","showConfirmButton","timer","html","years","grades","marksheetTemplate","reportTemplate","Component","mapStateToProps","app","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { reset, setPapers, setApp } from '../store/actions/app';\nimport { removeUserFromLocalStorage } from '../util';\nimport './style.css';\nimport { getCourse } from '../store/actions/course';\nimport { getUserFromLocalStorage, getUniqueId, getFileName, getTime } from '../util';\nimport Info from './Info'\nimport Nav from './Nav';\nimport { setMarksheet, resetMarksheet, setRows } from '../store/actions/marksheet';\nimport Details from './Details';\nimport cloneDeep from 'lodash/cloneDeep'\nimport axios from 'axios';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport 'sweetalert2/dist/sweetalert2.css'\nimport classNames from 'classnames';\nimport Marksheet from '../marksheet/Marksheet';\nimport Report from '../report/Report';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.logout = this.logout.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleYearChange = this.handleYearChange.bind(this);\n        this.addRow = this.addRow.bind(this);\n        this.removeRow = this.removeRow.bind(this);\n        this.onInfoChange = this.onInfoChange.bind(this);\n        this.onPaperInfoChange = this.onPaperInfoChange.bind(this);\n        this.saveStudentInfo = this.saveStudentInfo.bind(this);\n        this.saveMarks = this.saveMarks.bind(this);\n        this.printMarksheet = this.printMarksheet.bind(this);\n        this.printLedgerReport = this.printLedgerReport.bind(this);\n        this.reload = this.reload.bind(this);\n        this.state = {\n            errors: {},\n            saveStudentInfoFlag: false,\n            saveMarksFlag: false,\n            displayErrors: {\n                grace: '',\n                required: '',\n                marks: '',\n                rollNumber: '',\n                examName: '',\n                year: '',\n                date: '',\n            },\n            view: 'default',\n            apiUrl: '',\n        };\n        this.skipWords = ['ABS', 'NP', 'CC', 'NA'];\n        this.backToDashboard = this.backToDashboard.bind(this);\n    }\n\n    componentDidMount() {\n        const user = getUserFromLocalStorage();\n        const code = user.courseCode;\n        this.props.getCourse(code);\n    }\n\n    reload() {\n        window.location.reload();\n    }\n\n    logout() {\n        removeUserFromLocalStorage();\n        this.props.reset();\n        this.props.resetMarksheet();\n    }\n\n    onChange(e) {\n        this.props.setMarksheet({ [e.target.name]: e.target.value });\n    }\n\n    handleDateChange(e) {\n        this.props.setMarksheet({ date: e });\n    }\n\n    handleYearChange(e) {\n        const { user } = this.props;\n        this.props.resetMarksheet();\n        const year = e.target.value;\n        const course = this.props.course[year] || {};\n        const papers = (course && course.papers) || [];\n        this.props.setMarksheet({ year });\n        this.props.setApp({ papers: [...papers], maxGrace: course.maxGrace });\n        const code = user.courseCode;\n        const fileName = getFileName(code, year);\n        const apiUrl = `./api/${fileName}`;\n        this.setState({apiUrl});\n        axios.get(`${apiUrl}?nocache=${getTime()}`).then((res) => {\n            this.props.setMarksheet(res.data);\n        })\n            .catch((error) => console.log(error));\n    }\n\n    addRow() {\n        const { marksheet } = this.props;\n        let { papers } = this.props;\n        const row = {};\n        let _papers = cloneDeep(papers);\n        if (papers.length === 0) {\n            return;\n        }\n        row.id = getUniqueId();\n        row.rollNumber = '';\n        row.name = '';\n        row.papers = _papers;\n        this.props.setRows([...marksheet.rows, row]);\n\n    }\n\n    removeRow(index) {\n        Swal.fire({\n            // title: 'Are you sure?',\n            text: \"Are you sure you want to permanently delete this student record?\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes',\n            cancelButtonText: \"No\"\n        }).then((result) => {\n            if (result.value) {\n                this.remove(index);\n            }\n        })\n    }\n\n    remove(index) {\n        const rows = [...this.props.marksheet.rows]\n        rows.splice(index, 1);\n        this.props.setMarksheet({\n            rows\n        });\n    }\n\n    onInfoChange(index, e) {\n        const { marksheet } = this.props;\n        const rows = [...marksheet.rows];\n        let value = e.target.value;\n        if (e.target.name === 'name') {\n            value = `${value}`.toUpperCase();\n        }\n        rows[index][e.target.name] = value;\n        this.props.setRows(rows);\n    }\n\n    onPaperInfoChange(rowIndex, paperIndex, detailIndex, e) {\n        const { marksheet } = this.props;\n        const rows = [...marksheet.rows];\n        const papers = [...rows[rowIndex].papers];\n        papers[paperIndex].paperDetails[detailIndex][e.target.name] = e.target.value;\n        rows[rowIndex].papers = papers;\n        this.props.setRows(rows);\n\n    }\n\n    saveStudentInfo() {\n        this.resetError();\n        this.setState({ saveStudentInfoFlag: true });\n        const { marksheet, user } = this.props;\n        const code = user.courseCode;\n        const fileName = getFileName(code, marksheet.year);\n        axios.post('./api/save.php', { fileName: fileName, data: marksheet }).then(res => {\n            this.success();\n            this.setState({ saveStudentInfoFlag: false });\n        })\n            .catch((error) => {\n                this.error();\n                this.setState({ saveStudentInfoFlag: false });\n            });\n    }\n\n    saveMarks() {\n        this.resetError();\n        const { marksheet, user } = this.props;\n        if (this.checkErrors(marksheet)) {\n            this.setState({ saveMarksFlag: true });\n            const code = user.courseCode;\n            const fileName = getFileName(code, marksheet.year);\n            axios.post('./api/save.php', { fileName: fileName, data: marksheet }).then(res => {\n                this.success();\n                this.setState({ saveMarksFlag: false });\n            }).catch((error) => {\n                this.error();\n                this.setState({ saveMarksFlag: false });\n            });\n        }\n        else {\n            setTimeout(() => {\n                this.error('Validation failed', this.getErrorDisplayMessage());\n            })\n        }\n    }\n\n    getErrorDisplayMessage() {\n        const displayErrorMessage = Object.values(this.state.displayErrors);\n        return displayErrorMessage.join(`<br>`);\n    }\n\n    checkErrors(marksheet) {\n        const errors = {};\n        const displayErrors = {};\n        if (!marksheet.examName) {\n            errors.examName = 'Required';\n            this.setState({ displayErrors: { ...this.state.displayErrors, examName: 'Please fill in Exam name' } })\n            displayErrors.examName = 'Please fill in Exam name';\n        }\n        if (!marksheet.examYear) {\n            errors.examYear = 'Required';\n            displayErrors.year = 'Please fill in year';\n\n        }\n        if (!marksheet.date) {\n            errors.date = 'Required';\n            displayErrors.date = 'Please fill in date of result';\n\n        }\n\n        marksheet.rows.forEach((row, index) => {\n            if (!row.rollNumber) {\n                errors[`rollNumber${index}`] = 'Required';\n                displayErrors.required = 'Fields are required';\n            }\n            else if (isNaN(row.rollNumber) || row.rollNumber <= 0) {\n                errors[`rollNumber${index}`] = 'Invalid roll number';\n                displayErrors.rollNumber = 'Please enter valid Roll number';\n            }\n            if (!row.name) {\n                errors[`name${index}`] = 'Required';\n                displayErrors.required = 'Fields are required';\n            }\n\n            let graceMarksCounter = 0;\n            row.papers.forEach((paper, i) => {\n                paper.paperDetails.forEach((detail, detailIndex) => {\n                    if (detail.isRequired && !detail.marksObtained) {\n                        errors[`${detail.title}_${index}_${i}`] = 'Required';\n                        displayErrors.required = 'Fields are required';\n                    }\n                    else if (detail.marksObtained) {\n                        if(detail.title == \"Language\" || detail.title == \"Grade\")\n                        {\n                            return;\n                        }\n                        if (this.skipWords.indexOf(`${detail.marksObtained}`.toUpperCase()) !== -1) {\n                            return;\n                        }\n\n                        if (isNaN(detail.marksObtained)) {\n                            errors[`${detail.title}_${index}_${i}`] = 'Invalid Value';\n                            displayErrors.marks = 'Please correct the entered marks';\n                        }\n                        else if (detail.isGrace) {\n                            graceMarksCounter += +detail.marksObtained;\n                            if (graceMarksCounter > this.props.maxGrace) {\n                                errors[`${detail.title}_${index}_${i}`] = 'Grace marks is larger';\n                                displayErrors.marks = 'Grace marks is exceeding limit';\n                            }\n                        }\n                        else if (+detail.marksObtained < 0 || +detail.marksObtained > +detail.maximum) {\n                            errors[`${detail.title}_${index}_${i}`] = 'Not in range';\n                            displayErrors.marks = 'Please correct the entered marks';\n                        }\n\n                    }\n\n                })\n            })\n        })\n        // console.log(errors);\n        if (Object.keys(errors).length) {\n            this.setState({ errors, displayErrors });\n            return false;\n        }\n\n        return true;\n    }\n\n    resetError() {\n        this.setState({ errors: {} })\n    }\n\n\n    printMarksheet() {\n\n        this.setState({view: 'marksheet'})\n    }\n\n    printLedgerReport() {\n        this.setState({view: 'report'})\n    }\n\n    success(message = 'Records have been saved successfully!') {\n        Swal.fire({\n            type: 'success',\n            title: message,\n            showConfirmButton: false,\n            timer: 1500\n        })\n    }\n\n    error(message = 'Something went wrong', text = '') {\n        Swal.fire({\n            type: 'error',\n            title: message,\n            html: text\n        })\n    }\n\n    backToDashboard()\n    {\n        // this.setState({view: 'default'})\n        this.reload();\n    }\n\n    render() {\n        const { course, user } = this.props;\n        const { years } = course;\n        const { marksheet, papers } = this.props;\n        const { errors, saveStudentInfoFlag, saveMarksFlag, view, apiUrl } = this.state;\n        const grades = course.grades || [];\n        return <div>\n            <div className={classNames('full-height', {'has-background-grey-lighter': view === 'default'})}>\n                <Nav logout={this.logout} reload={this.reload} user={user} />\n                {view === 'default' && \n                <Fragment>\n                    <Info\n                        course={course}\n                        years={years}\n                        marksheet={marksheet}\n                        onChange={this.onChange}\n                        handleDateChange={this.handleDateChange}\n                        handleYearChange={this.handleYearChange}\n                        errors={errors}\n                    />\n                    <Details\n                        marksheet={marksheet}\n                        papers={papers}\n                        addRow={this.addRow}\n                        removeRow={this.removeRow}\n                        onInfoChange={this.onInfoChange}\n                        onPaperInfoChange={this.onPaperInfoChange}\n                        saveStudentInfo={this.saveStudentInfo}\n                        saveMarks={this.saveMarks}\n                        errors={errors}\n                        printMarksheet={this.printMarksheet}\n                        printLedgerReport={this.printLedgerReport}\n                        saveStudentInfoFlag={saveStudentInfoFlag}\n                        saveMarksFlag={saveMarksFlag}\n                    />\n                </Fragment>\n                }\n                {\n                    view === 'marksheet' &&\n                    <Marksheet grades={grades} backToDashboard={this.backToDashboard} apiUrl={apiUrl} marksheetTemplate={course.marksheetTemplate}/>\n                }\n                {\n                    view === 'report' &&\n                    <Report  grades={grades} backToDashboard={this.backToDashboard} apiUrl={apiUrl} reportTemplate={course.reportTemplate}/>\n                }\n            </div>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        course: state.course,\n        marksheet: state.marksheet,\n        user: state.app.user,\n        papers: state.app.papers,\n        maxGrace: state.app.maxGrace\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        reset: () => dispatch(reset()),\n        getCourse: (code) => dispatch(getCourse(code)),\n        setMarksheet: (data) => dispatch(setMarksheet(data)),\n        resetMarksheet: () => dispatch(resetMarksheet()),\n        setRows: (data) => dispatch(setRows(data)),\n        setPapers: (papers) => dispatch(setPapers(papers)),\n        setApp: (payload) => dispatch(setApp(payload))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);"]},"metadata":{},"sourceType":"module"}